# Workflow names are optional, but should be provided.
# They are displayed on GitHub when the action is run.
name: Bekkis ✨

# The `on` property configures the events that will trigger the workflow.
# In our case we want it to run when the `pull_request` event is triggered.
# In short, that means that the workflow will run when a pull request is
# either opened or updated (but not renamed or labeled – code needs to
# be changed).
on:
  - pull_request

# Jobs are what actually do the work. We can add as many jobs as we want.
# These will be run in parallel.
jobs:
  hello_world_job:
    # As with workflow names (and even step names), job names are not
    # strictly required, but they are good practice.
    name: Hello world 🌱

    # There are many virtual machines we can run our jobs on. The most
    # common one is `ubuntu-latest`. See this page for a full list of
    # officially supported runners: https://github.com/actions/runner-images
    runs-on: ubuntu-latest

    # Each job can have multiple steps. These will be run in sequence.
    steps:
      - name: Print message to terminal
        run: echo "Hello 🌏!"
  build:
    name: Build 🏗️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
  lint:
    name: Lint 🧹
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint:check
  test:
    name: Test 🧪
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
  format:
    name: Format 🎨
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Format
        run: npm run format:check
  post-comment:
    name: Post comment 📝
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: [build, lint, test, format]
    steps:
      - name: Post comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ **Build**: ${{ job.status }}
